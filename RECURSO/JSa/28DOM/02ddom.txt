
Este ejemplo ilustra las principales relaciones entre elementos en el DOM:

Relación Padre-Hijo:

Un elemento padre contiene elementos hijos.
Se accede a los hijos con childNodes (todos los nodos) o children (solo elementos).


Acceso a hijos específicos:

firstElementChild: Primer hijo que es un elemento.
lastElementChild: Último hijo que es un elemento.


Relación entre Hermanos:

Elementos al mismo nivel en la jerarquía.
Se navega con nextElementSibling y previousElementSibling.


Navegación hacia arriba (de hijo a padre):

parentElement: Accede al elemento padre directo.
closest(): Encuentra el ancestro más cercano que coincide con un selector.


Conteo de hijos:

children.length: Cuenta los hijos que son elementos.
childNodes.length: Cuenta todos los nodos hijos (incluyendo texto y comentarios).



Puntos clave sobre las relaciones en el DOM:

Nodos vs Elementos: childNodes incluye todos los tipos de nodos (elementos, texto, comentarios), mientras que propiedades como children, firstElementChild, etc., se enfocan solo en elementos.
Espacios en blanco: Los espacios y saltos de línea entre etiquetas HTML se consideran nodos de texto, lo que puede afectar el conteo y la navegación si usas childNodes.
Elementos vs Nodos: Propiedades como nextSibling pueden devolver nodos de texto, mientras que nextElementSibling siempre devuelve el siguiente elemento.
Rendimiento: Para manipulaciones frecuentes, es más eficiente almacenar referencias a elementos en variables en lugar de consultarlos repetidamente.


